{"version":3,"sources":["index.js"],"names":["Sshtate","state","storeEl","Listeners","get","root","key","split","reduce","acc","current","set","val","keyParts","length","i","currentKey","ev","unique","cb","callback","detail","new","previous","initialState","document","createElement","currentState","getState","JSON","stringify","dispatchEvent","CustomEvent","bubbles","undefined"],"mappings":";AAuEeA,aAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAvEf,IAAIC,EACAC,EAsEWF,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,QAAAA,QAAAA,aAAAA,EArEf,IAAIG,EAAY,GAOVC,EAAM,SAACC,EAAMC,GAAQA,OAAAA,EAAIC,MAAM,KAAKC,OAAO,SAACC,EAAKC,GAAYD,OAAAA,EAAIC,IAAUL,IAQ3EM,EAAM,SAACN,EAAMC,EAAKM,GAGf,IAFCC,IAAAA,EAAWP,EAAIC,MAAM,KACrBO,EAASD,EAASC,OACfC,EAAI,EAAGA,EAAID,EAAS,EAAGC,IAAK,CAC3BC,IAAAA,EAAaH,EAASE,GACvBV,EAAKW,KAAaX,EAAKW,GAAc,IAC1CX,EAAOA,EAAKW,GAEhBX,EAAKQ,EAASC,EAAS,IAAMF,GAU3BK,EAAK,SAACf,EAASgB,EAAQZ,EAAKa,GACxBC,IAAAA,EAAW,SAAA,GAAGC,IAAAA,EAAAA,EAAAA,OAAaF,OAAAA,EAAGE,EAAOC,IAAKD,EAAOE,WACnDJ,IAAIhB,EAAUe,GAAUE,GAC5BlB,EAASiB,EAA6B,mBAAxB,uBAAuDb,WAAAA,OAAAA,GAAQa,EAAyBC,EAApBjB,EAAUe,IACvFC,UAAWhB,EAAUe,IAMxBlB,EA0BSA,WAzBCwB,SAAAA,EAAAA,GAAc,EAAA,KAAA,GACtBtB,EAAUuB,SAASC,cAAc,QACjCzB,EAAQuB,GAAgB,GAuBjBxB,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,WArBFM,MAAAA,SAAAA,EAAKM,GACJe,IAAAA,EAAe,KAAKC,SAAStB,GAC/BuB,KAAKC,UAAUlB,KAASiB,KAAKC,UAAUH,KACvChB,EAAIV,EAAOK,EAAKM,GAChBV,EAAQ6B,cAAc,IAAIC,YAAuB1B,WAAAA,OAAAA,GAAO,CACpD2B,SAAS,EACTZ,OAAQ,CAAEC,IAAKV,EAAKW,SAAUI,SAe/B3B,CAAAA,IAAAA,YAXDkB,MAAAA,SAAAA,EAAQZ,EAAKa,GACnBF,EAAGf,EAASgB,EAAQZ,EAAKa,KAUlBnB,CAAAA,IAAAA,cARCkB,MAAAA,SAAAA,EAAQZ,EAAKa,GACrBF,EAAGf,EAASgB,EAAQZ,KAObN,CAAAA,IAAAA,WALFM,MAAAA,SAAAA,GACEA,YAAQ4B,IAAR5B,EAAoBL,EAAQG,EAAIH,EAAOK,OAIvCN,EAAAA,GAAAA,QAAAA,QAAAA,EAAAA,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA","file":"index.js","sourceRoot":"../src","sourcesContent":["let state;\nlet storeEl;\nlet Listeners = {};\n\n/**\n * Helper method to get the value of a nested object property.\n * @param {*} root \n * @param {*} key \n */\nconst get = (root, key) => key.split('.').reduce((acc, current) => acc[current], root);\n\n/**\n * Helper method to set value of a nested object property.\n * @param {*} root \n * @param {*} key \n * @param {*} val \n */\nconst set = (root, key, val) => {\n    const keyParts = key.split('.');\n    const length = keyParts.length;\n    for (let i = 0; i < length - 1; i++) {\n        const currentKey = keyParts[i];\n        if (!root[currentKey]) root[currentKey] = {}\n        root = root[currentKey];\n    }\n    root[keyParts[length - 1]] = val;\n};\n\n/**\n * Helper method for adding/removing the eventListener for your subscription(s).\n * @param {*} storeEl \n * @param {*} unique \n * @param {*} key \n * @param {*} cb \n */\nconst ev = (storeEl, unique, key, cb) => {\n    const callback = ({ detail }) => cb(detail.new, detail.previous);\n    if (cb) Listeners[unique] = callback;\n    storeEl[!cb ? 'removeEventListener' : 'addEventListener'](`Sshtate.${key}`, !cb ? Listeners[unique] : callback);\n    if (!cb) delete Listeners[unique];\n}\n\n/**\n * Sshtate simplified store\n */\nclass Sshtate {\n    constructor(initialState) {\n        storeEl = document.createElement('meta');\n        state = initialState || {};\n    }\n    setState(key, val) {\n        const currentState = this.getState(key);\n        if (JSON.stringify(val) !== JSON.stringify(currentState)) {\n            set(state, key, val);\n            storeEl.dispatchEvent(new CustomEvent(`Sshtate.${key}`, {\n                bubbles: true,\n                detail: { new: val, previous: currentState }\n            }));\n        }\n    }\n    subscribe(unique, key, cb) {\n        ev(storeEl, unique, key, cb);\n    }\n    unsubscribe(unique, key, cb) {\n        ev(storeEl, unique, key);\n    }\n    getState(key) {\n        return key === undefined ? state : get(state, key);\n    }\n}\n\nexport default Sshtate;\nexport { Sshtate };"]}